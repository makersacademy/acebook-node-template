<html>

<head>

  <style>
h1 {text-align: center;}
p {text-align: center;}
div {text-align: center;}
      
    
    * {
      padding: 0;
      margin: 0;
    }

    .main-div {
      height: 100vh;
      display: flex;
      justify-content: left;
      align-items: left;
    }

    .button-div {
      padding: 10px;
      position: relative;
    }

    .love-button,
    .like-button,
    .fav-button,
    .submit-button {
      border: none;
      height: 30px;
      width: 60px;
      font-size: 15px;
      background-color: #000;
      color: #fff;
      border-radius: 5px;
      cursor: pointer;
      display: inline;
      justify-content: center;
      align-items: center;
    }

    .love-button i,
    .like-button i,
    .fav-button i {
      position: relative;
      left: 70px;
    }

    .profile {
      display: flex
    }

    #usericon {
      width: 50px;
      height: 50px;
      margin-right: 10px;
    }


  </style>

  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <script>
    //updatePostStats is an object with a like/unlike function - 
    var updatePostStats = {
      Like: function (postId) {
        document.querySelector('#likes-count-' + postId).textContent++;
      },
      Unlike: function (postId) {
        document.querySelector('#likes-count-' + postId).textContent--;
      }
    };
    //toggles the button
    var toggleButtonText = {
      Like: function (button) {
        button.textContent = "Unlike";

      },
      Unlike: function (button) {
        button.textContent = "Like";
      }
    };
    //
    var actOnPost = function (event) {
      var postId = event.target.dataset.postId;
      var action = event.target.textContent.trim(); //will either be like or unlike
      toggleButtonText[action](event.target); //toggles the button to show the opposite
      updatePostStats[action](postId);
      axios.post('/posts/' + postId + '/act', { action: action });
    }

    //implementation of love button
    var updatePostStatsLove = {
      Love: function (postId) {
        document.querySelector('#loves-count-' + postId).textContent++;
      },
      Hate: function (postId) {
        document.querySelector('#loves-count-' + postId).textContent--;
      }
    };
    //toggles the button
    var toggleButtonTextLove = {
      Love: function (button) {
        button.textContent = "Hate";

      },
      Hate: function (button) {
        button.textContent = "Love";
      }
    };
    //
    var actOnPostLove = function (event) {
      var postId = event.target.dataset.postId;
      console.log(postId)
      var action = event.target.textContent.trim(); //will either be like or unlike
      toggleButtonTextLove[action](event.target); //toggles the button to show the opposite
      updatePostStatsLove[action](postId);
      axios.post('/posts/' + postId + '/love', { action: action });
    }


    //Follow buttons functionality

    var toggleFollowText = {
      Follow: function (button) {
        button.textContent = "Followed";
        button.disabled = true;
      }
    };

    var actFollow = function (event) {
      //{{!-- var postId = event.target.dataset.postId; --}}
      var userId = event.target.dataset.id; //gets userId from data-id
      //console.log(userId) 
      var mainuser = document.getElementById('mainuser').innerHTML.trim() //gets the main username from the welcome page
      //console.log(mainuser)
      toggleFollowText["Follow"](event.target); //toggles the button to show the opposite
      axios.post('/posts/' + userId + '/befriend', { action: "Follow", friend: userId, main: mainuser }); //create a post route - this route is dodge
    }     //params are passed into the req body through the curly braces as instance vars?

  </script>

</head>

<body>
  <div>
    <div class="profile" style="display: flex; justify-content: center; align-items: center;">
      {{#if user.profilepic }}
      <img src="{{user.profilepic}}" width="50" height="50">
      {{else}}
      <img id="usericon" src="https://visualpharm.com/assets/422/Cat%20Profile-595b40b65ba036ed117d3d6b.svg" alt="User">
      {{/if}}
      <span class="author"></span>
      <h1 style="display:none;" id="mainuser">{{user.username}}</h1>
      <p style="font-size:40px;">Welcome {{user.username}}
      </p>
    </div>
    
    <br>

    <div class="container-fluid text-center">
      {{!-- for each of the posts array, the message and date is posted and a button
      rendered - the button has a onclick method that runs a method from the script,
      each button has a data-post-id attached in which the posts.id is attached to.
      the item with likes count is given an idea which is also associated with posts.id --}}
      {{#each posts }}
      <div class="box">
      <div class="posts" style="margin-left: 50px">
        <div>
          <b>{{ this.message }}</b><br>
          <div class="photoURL">

            {{#if this.image }}
            <img src="{{this.image}}" width="100" height="100" alt="image not found!">
            {{else}}
            <p></p>
            {{/if}}

          </div>
          <span id="author-{{ this.author }}">
            <h3>{{ this.author }}</h3>
            {{!-- {{#if }}
            <img src="{{this.}}" width="100" height="100" alt="image not found!">
            {{else}}
            <p></p>
            {{/if}} --}}
          </span>
          <br>
          <button data-id="{{ this.author }}" class="fav-button" onclick="actFollow(event)">Follow</button><br>
          <small>{{ this.date }}</small>
        </div>
        {{!-- adds a little meow with the like counter, associated with this.id and showing this.likes_count --}}
        <div class="row" style="margin-left:30px">
          
        </div>
        <span style="margin-left: -40px;"> &#x1F63B;</span>
        <span id="likes-count-{{ this.id }}">{{ this.likes }}</span>

        <span style="margin-left:60px">&#128062;</span>
        <span id="loves-count-{{ this.id }}">{{ this.loves }}</span>

      </div>
      {{!-- set the data-post-id as posts.id onto this button --}}

      <div id="button-div">
        <button style="display: flex; justify-content: center;" ><button style="margin-left:30px" onclick="actOnPost(event);" data-post-id="{{ this.id }}" class="like-button">Like</button>
        <button style="margin-left:30px" onclick="actOnPostLove(event);" data-post-id="{{ this.id }}" class="love-button">Love</button>
      </div>
    </div>
  </div>
  {{!-- adds a little meow with the like counter, associated with this.id and showing this.likes_count --}}
  {{!-- set the data-post-id as posts.id onto this button --}}
  <br>
  <div id="post-comments" style="font-size: 18px">
    <h5> Comments: </h5>
    {{#each this.comments}}
    <div class="comment-container" style="text-align:center">
    "{{this.comment}}" - <small>{{this.user}}, {{this.date}}</small></div>
    
    {{/each}}
  </div>
  <br>
  <div style="display: flex; justify-content: center;">
  <form id="comment-form" method="post" action="/posts/{{ this.id }}/comment">
    <input
      style="height:50px; width:200px; display: inline-block; margin-left: 30px; border: 2px solid black; border-radius: 20px;"
      type="text" id="comment-" +{{ this.id }} name="comment" placeholder=" Enter your comment here">

    <button class="submit-button" type="submit">Submit</button>
  </form>

  </div>



  <br>
  {{/each}}
  </div>
  </div>
<br>


</body>

</html>