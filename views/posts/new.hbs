<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create a new post</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

  
<body>
    
    <div class="timeline-navbar">
      <i id="dark-mode-toggle" class="fas fa-moon toggle-button"></i>
  <div class="topbar">
    <div class="icon large-icon">{{icon}}</div>
    <a href="/about"><h1 class="title">Acebook</h1></a>
    <form action='/sessions?_method=DELETE' method='POST'>
      <input type="submit" value="Log Out" class="global-button logout">
    </form>
  </div>
  <div class="bottombar">
    <a href="/posts">Back to Posts</a>
  </div>
</div>

<div class="new-content">
  <div class="new-post-box">
    <h1 class="create-title">Create your Post</h1>
    {{#if error }}
      <div class="error-message">
        {{error}}
      </div>
    {{/if}}
    <form action="/posts/gif" method="post" class="gif-finder">
      <div>
        <input type="text" name="searchQuery" placeholder="Search GIFs" class="input-box">
        <input type="submit" value="Search" class="global-button">
      </div>
    </form>
    <form id="new-post-form" action="/posts" method="post">
      <div class="gif-results">
        {{#if gifs}}
          <ul class="gif-list">
            {{#each gifs}}
              <li>
                <div class="gif" aria-label="{{this.title}}">
                  <input type="radio" name="gifUrl" value="{{this.images.original.url}}" id="gif-{{@index}}">
                  <img src="{{this.images.original.url}}" alt="{{this.title}}" class="gif-thumbnail">
                </div> 
              </li>
            {{/each}}
          </ul>
        {{else}}
          {{#if showNoGifsFound}}
            <p class="no-gif-line">No GIFs found.</p>
          {{/if}}
        {{/if}}
      </div>
      <textarea id="message" class="input-area" name="message" rows="6" placeholder="Say something..." maxlength="500" required>{{message}}</textarea>
      <input type="submit" value="Submit" class="global-button">
    </form>
  </div>
</div>

<script>
  // Get the dark mode toggle button element
  const darkModeToggle = document.getElementById('dark-mode-toggle');

  // Check if the user's preference is stored in localStorage
  const isDarkMode = localStorage.getItem('darkMode') === 'true';

  // Set the initial state of dark mode based on the user's preference
  if (isDarkMode) {
    document.body.classList.add('dark-mode');
    darkModeToggle.classList.add('fa-sun');
  } else {
    document.body.classList.remove('dark-mode');
    darkModeToggle.classList.add('fa-moon');
  }

  // Toggle dark mode when the button is clicked
  darkModeToggle.addEventListener('click', () => {
    // Toggle the dark mode class on the body element
    document.body.classList.toggle('dark-mode');
    darkModeToggle.classList.toggle('fa-sun');
    darkModeToggle.classList.toggle('fa-moon');

    // Update the button text and store the dark mode preference
    if (document.body.classList.contains('dark-mode')) {
      localStorage.setItem('darkMode', 'true');
    } else {
      localStorage.setItem('darkMode', 'false');
    }
  });

// initialize flag variable to false
  let showNoGifsFound = false;

  // function to handle search and update flag variable accordingly
  function handleSearch() {
    showNoGifsFound = false;
    const apiKey = "eLyYwLxVEXe3Jzab51w6OoNKOXhG4byS";
    const url = `https://api.giphy.com/v1/gifs/search?q=${searchTerm}&api_key=${apiKey}`;

    // Save the message text to a temp variable
    const messageText = document.getElementById("message").value;

    fetch(url)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        // check if any results were found
        if (data.data.length > 0) {
          // update the "gifs" array and render the gif list
          gifs = data.data;
          renderGifList();
        } else {
          // no results found, show the "No GIFs found" message
          showNoGifsFound = true;
          renderNoGifsFound();
        }
      })
      .catch(error => {
        console.error('There was a problem with the fetch operation:', error);
      })
      // Set the message text back to local storage after the search has completed
      .finally(() => {
        if (messageText !== "") {
          localStorage.setItem("messageText", messageText);
        }
      });
  }

  // Save message text to local storage when the user types in the text area
  document.getElementById("message").addEventListener("input", function() {
    localStorage.setItem("messageText", this.value);
  });

  // Retrieve message text from local storage and populate the text area on page load
  var savedMessageText = localStorage.getItem("messageText");
  if (savedMessageText !== null) {
    document.getElementById("message").value = savedMessageText;
  }

  // Clear message text from local storage after the form is submitted
  document.getElementById("new-post-form").addEventListener("submit", function() {
    localStorage.removeItem("messageText");
  });

  // Remove message text from local storage when the user navigates away from the page
  window.addEventListener("unload", function() {
    localStorage.removeItem("messageText");
  });
</script> 

</body>
</html>




