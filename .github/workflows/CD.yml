name: CD

on:
  push:
    branches:
      - main  # Trigger on pushes to main

jobs:
  build_and_upload:
    name: Build and Upload Artifact to S3
    runs-on: ubuntu-latest
    outputs:
      latest_artifact: ${{ steps.upload.outputs.artifact_name }} # Store the artifact name
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Install Dependencies
        run: npm install

      - name: Build and Package Artifact
        id: package
        run: |
          VERSION=$(date +%Y%m%d%H%M%S)  
          ARTIFACT_NAME="app-${VERSION}.zip"
          zip -r $ARTIFACT_NAME .
          echo "Artifact created: $ARTIFACT_NAME"
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Upload Artifact to S3
        id: upload
        run: |
          aws s3 cp ${{ env.artifact_name }} s3://dreamteam-bucket/${{ env.artifact_name }}
          echo "artifact_name=${{ env.artifact_name }}" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build_and_upload
    steps:
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Get Latest Artifact from S3
        id: latest_artifact
        run: |
          LATEST_FILE=$(aws s3 ls s3://dreamteam-bucket/ --recursive | sort | tail -n 1 | awk '{print $4}')
          echo "Latest artifact: $LATEST_FILE"
          echo "artifact_name=$LATEST_FILE" >> $GITHUB_ENV

      - name: Deploy to EC2 via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name dreamteam-deploy \
            --deployment-group-name production-group \
            --s3-location bucket=dreamteam-bucket,key=${{ env.artifact_name }},bundleType=zip
